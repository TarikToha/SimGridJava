Auto-WEKA result:
best classifier: weka.classifiers.meta.AdditiveRegression
arguments: [-S, 1, -I, 87, -W, weka.classifiers.trees.RandomForest, --, -I, 78, -K, 2, -depth, 0]
attribute search: weka.attributeSelection.BestFirst
attribute search arguments: [-D, 1, -N, 7]
attribute evaluation: weka.attributeSelection.CfsSubsetEval
attribute evaluation arguments: [-M]
metric: rootMeanSquaredError
estimated rootMeanSquaredError: 6.240464337751297
training time on evaluation dataset: 7.375 seconds

You can use the chosen classifier in your own code as follows:

AttributeSelection as = new AttributeSelection();
ASSearch asSearch = ASSearch.forName("weka.attributeSelection.BestFirst", new String[]{"-D", "1", "-N", "7"});
as.setSearch(asSearch);
ASEvaluation asEval = ASEvaluation.forName("weka.attributeSelection.CfsSubsetEval", new String[]{"-M"});
as.setEvaluator(asEval);
as.SelectAttributes(instances);
instances = as.reduceDimensionality(instances);
Classifier classifier = AbstractClassifier.forName("weka.classifiers.meta.AdditiveRegression", new String[]{"-S", "1", "-I", "87", "-W", "weka.classifiers.trees.RandomForest", "--", "-I", "78", "-K", "2", "-depth", "0"});
classifier.buildClassifier(instances);


Correlation coefficient                  1     
Mean absolute error                      0.0006
Root mean squared error                  0.0006
Relative absolute error                  0      %
Root relative squared error              0      %
Total Number of Instances             1045     


Temporary run directories:
/tmp/autoweka7613505347822291891/
/tmp/autoweka7156429410641419881/
/tmp/autoweka6026861436124988458/
/tmp/autoweka4079571676707705755/


For better performance, try giving Auto-WEKA more time.
Tried 566 configurations; to get good results reliably you may need to allow for trying thousands of configurations.

